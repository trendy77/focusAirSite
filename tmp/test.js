function pug_escape(e){var a=""+e,t=pug_match_html.exec(a);if(!t)return e;var r,c,n,s="";for(r=t.index,c=0;r<a.length;r++){switch(a.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}c!==r&&(s+=a.substring(c,r)),c=r+1,s+=n}return c!==r?s+a.substring(c,r):s}
var pug_match_html=/["&<>]/;
function pug_rethrow(n,e,r,t){if(!(n instanceof Error))throw n;if(!("undefined"==typeof window&&e||t))throw n.message+=" on line "+r,n;try{t=t||require("fs").readFileSync(e,"utf8")}catch(e){pug_rethrow(n,null,r)}var i=3,a=t.split("\n"),o=Math.max(r-i,0),h=Math.min(a.length,r+i),i=a.slice(o,h).map(function(n,e){var t=e+o+1;return(t==r?"  > ":"    ")+t+"| "+n}).join("\n");throw n.path=e,n.message=(e||"Pug")+":"+r+"\n"+i+"\n\n"+n.message,n}function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {"test.pug":"html\n\thead\n\t\ttitle Jade Template\n\t\t\n\t\tstyle\n\t\t\tbody { font-family: Verdana; font-size: 13px; background: #eee;}\n\t\n\t\t\th1 { font-size: 22px; color: #464646; }\n\t\t\th2 { font-size: 18px; }\n\t\t\th3 { font-size: 14px; }\n\t\n\t\t\ta { color: #C2575B; text-decoration: none; }\n\t\t\ta:hover { color: #F76F76; }\n\n\tbody\n\t\th1 Jade Intro.\n\n\t\tp Clean and Classy!\n\n\t\th2 Text and Comments\n\t\tp Text inside \u003Cem\u003Eparagraph\u003C\u002Fem\u003E tag\n\t\tp\n\t\t\t| Multi\n\t\t\t| Line\n\t\tp.\n\t\t\tAnother way for large\n\t\t\tbodies of text!\n\n\t\t\u002F\u002F HTML Comments visible in HTML source\n\t\t\u002F\u002F- Invisible comments - Jade specific\n\t\t\u002F\u002F block comments\n\t\t\t| this piece of text won't be visible.\n\t\t\t| as this is part of the HTML block comments.\n\n\t\th2 IDs and Classes\n\n\t\t#content\n\t\t\tp.description `p` with a class of description inside a `div` with an id of content. You can simply omit the div btw.\n\n\t\th2 Attributes\n\t\t\u002F\u002F for boolean attributes you can pass true\u002Ffalse or omit them\n\t\t\u002F\u002F Multi lines ?\n\t\t\u002F\u002F No commas ?\n\t\tinput(type=\"checkbox\"\n\t\t\tname=\"terms\"\n\t\t\tchecked)\n\n\t\th2 Nesting\n\t\t\u002F\u002F We will do some nesting now\n\t\t\t| Lesser nesting ? ok .. cool!\n\n\t\tul#menu\n\t\t\tli: a(href=\"#target1\", title=\"Home\") Home\n\t\t\tli: a(href=\"#target2\", title=\"Contact\") Contact\n\n\t\th2 Variables and Escaping\n\t\t\u002F\u002F Ok .. time to learn the real stuff now!\n\t\t\t| Let's say you passed some variables to this template\n\t\t\t| from your Node.js code. Since we don't have a node.js setup\n\t\t\t| we're going to set the variables inside here.\n\t\t\t| yes! you can define variables in jade templates!\n\n\t\t\t| want more text in the heading ?\n\t\t\t| arrays ? objects ?\n\n\t\t\t| One thing to remember though. Jade will html escape\n\t\t\t| the contents of \\#{}. If you want unescaped content\n\t\t\t| use \\!{}\n\t\t\t| Also notice i escaped all interpolation tokens in this\n\t\t\t| block comment, else Jade would think that it needs to\n\t\t\t| do some string interpolation and throw errors!\n\n\t\t\t| That's all for now! In the next part I am going to\n\t\t\t| show you some other features like conditionals, mixins\n\t\t\t| and loops.\n\n\t\tmy_var = {name: 'Jade', type: 'templating engine'}\n\t\th3 #{my_var.name} is a #{my_var.type}"};
;var locals_for_with = (locals || {});(function (my_var) {;pug_debug_line = 1;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Chtml\u003E";
;pug_debug_line = 2;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Chead\u003E";
;pug_debug_line = 3;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ctitle\u003E";
;pug_debug_line = 3;pug_debug_filename = "test.pug";
pug_html = pug_html + "Jade Template\u003C\u002Ftitle\u003E";
;pug_debug_line = 5;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cstyle\u003E";
;pug_debug_line = 6;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cbody\u003E";
;pug_debug_line = 6;pug_debug_filename = "test.pug";
pug_html = pug_html + "{ font-family: Verdana; font-size: 13px; background: #eee;}\u003C\u002Fbody\u003E";
;pug_debug_line = 8;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch1\u003E";
;pug_debug_line = 8;pug_debug_filename = "test.pug";
pug_html = pug_html + "{ font-size: 22px; color: #464646; }\u003C\u002Fh1\u003E";
;pug_debug_line = 9;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch2\u003E";
;pug_debug_line = 9;pug_debug_filename = "test.pug";
pug_html = pug_html + "{ font-size: 18px; }\u003C\u002Fh2\u003E";
;pug_debug_line = 10;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch3\u003E";
;pug_debug_line = 10;pug_debug_filename = "test.pug";
pug_html = pug_html + "{ font-size: 14px; }\u003C\u002Fh3\u003E";
;pug_debug_line = 12;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ca\u003E";
;pug_debug_line = 12;pug_debug_filename = "test.pug";
pug_html = pug_html + "{ color: #C2575B; text-decoration: none; }\u003C\u002Fa\u003E";
;pug_debug_line = 13;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ca:hover\u003E";
;pug_debug_line = 13;pug_debug_filename = "test.pug";
pug_html = pug_html + "{ color: #F76F76; }\u003C\u002Fa:hover\u003E\u003C\u002Fstyle\u003E\u003C\u002Fhead\u003E";
;pug_debug_line = 15;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cbody\u003E";
;pug_debug_line = 16;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch1\u003E";
;pug_debug_line = 16;pug_debug_filename = "test.pug";
pug_html = pug_html + "Jade Intro.\u003C\u002Fh1\u003E";
;pug_debug_line = 18;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cp\u003E";
;pug_debug_line = 18;pug_debug_filename = "test.pug";
pug_html = pug_html + "Clean and Classy!\u003C\u002Fp\u003E";
;pug_debug_line = 20;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch2\u003E";
;pug_debug_line = 20;pug_debug_filename = "test.pug";
pug_html = pug_html + "Text and Comments\u003C\u002Fh2\u003E";
;pug_debug_line = 21;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cp\u003E";
;pug_debug_line = 21;pug_debug_filename = "test.pug";
pug_html = pug_html + "Text inside \u003Cem\u003Eparagraph\u003C\u002Fem\u003E tag\u003C\u002Fp\u003E";
;pug_debug_line = 22;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cp\u003E";
;pug_debug_line = 23;pug_debug_filename = "test.pug";
pug_html = pug_html + "Multi";
;pug_debug_line = 24;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 24;pug_debug_filename = "test.pug";
pug_html = pug_html + "Line\u003C\u002Fp\u003E";
;pug_debug_line = 25;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cp\u003E";
;pug_debug_line = 26;pug_debug_filename = "test.pug";
pug_html = pug_html + "Another way for large";
;pug_debug_line = 27;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 27;pug_debug_filename = "test.pug";
pug_html = pug_html + "bodies of text!";
;pug_debug_line = 28;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 28;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C\u002Fp\u003E";
;pug_debug_line = 29;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C!-- HTML Comments visible in HTML source--\u003E";
;pug_debug_line = 31;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C!-- block comments";
;pug_debug_line = 32;pug_debug_filename = "test.pug";
pug_html = pug_html + "| this piece of text won't be visible.";
;pug_debug_line = 33;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 33;pug_debug_filename = "test.pug";
pug_html = pug_html + "| as this is part of the HTML block comments.";
;pug_debug_line = 34;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 34;pug_debug_filename = "test.pug";
pug_html = pug_html + "--\u003E";
;pug_debug_line = 35;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch2\u003E";
;pug_debug_line = 35;pug_debug_filename = "test.pug";
pug_html = pug_html + "IDs and Classes\u003C\u002Fh2\u003E";
;pug_debug_line = 37;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cdiv id=\"content\"\u003E";
;pug_debug_line = 38;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cp class=\"description\"\u003E";
;pug_debug_line = 38;pug_debug_filename = "test.pug";
pug_html = pug_html + "`p` with a class of description inside a `div` with an id of content. You can simply omit the div btw.\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
;pug_debug_line = 40;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch2\u003E";
;pug_debug_line = 40;pug_debug_filename = "test.pug";
pug_html = pug_html + "Attributes\u003C\u002Fh2\u003E";
;pug_debug_line = 41;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C!-- for boolean attributes you can pass true\u002Ffalse or omit them--\u003E";
;pug_debug_line = 42;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C!-- Multi lines ?--\u003E";
;pug_debug_line = 43;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C!-- No commas ?--\u003E";
;pug_debug_line = 44;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cinput type=\"checkbox\" name=\"terms\" checked=\"checked\"\u002F\u003E";
;pug_debug_line = 48;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch2\u003E";
;pug_debug_line = 48;pug_debug_filename = "test.pug";
pug_html = pug_html + "Nesting\u003C\u002Fh2\u003E";
;pug_debug_line = 49;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C!-- We will do some nesting now";
;pug_debug_line = 50;pug_debug_filename = "test.pug";
pug_html = pug_html + "| Lesser nesting ? ok .. cool!";
;pug_debug_line = 51;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 51;pug_debug_filename = "test.pug";
pug_html = pug_html + "--\u003E";
;pug_debug_line = 52;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cul id=\"menu\"\u003E";
;pug_debug_line = 53;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cli\u003E";
;pug_debug_line = 53;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ca href=\"#target1\" title=\"Home\"\u003E";
;pug_debug_line = 53;pug_debug_filename = "test.pug";
pug_html = pug_html + "Home\u003C\u002Fa\u003E\u003C\u002Fli\u003E";
;pug_debug_line = 54;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cli\u003E";
;pug_debug_line = 54;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ca href=\"#target2\" title=\"Contact\"\u003E";
;pug_debug_line = 54;pug_debug_filename = "test.pug";
pug_html = pug_html + "Contact\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E";
;pug_debug_line = 56;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch2\u003E";
;pug_debug_line = 56;pug_debug_filename = "test.pug";
pug_html = pug_html + "Variables and Escaping\u003C\u002Fh2\u003E";
;pug_debug_line = 57;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003C!-- Ok .. time to learn the real stuff now!";
;pug_debug_line = 58;pug_debug_filename = "test.pug";
pug_html = pug_html + "| Let's say you passed some variables to this template";
;pug_debug_line = 59;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 59;pug_debug_filename = "test.pug";
pug_html = pug_html + "| from your Node.js code. Since we don't have a node.js setup";
;pug_debug_line = 60;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 60;pug_debug_filename = "test.pug";
pug_html = pug_html + "| we're going to set the variables inside here.";
;pug_debug_line = 61;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 61;pug_debug_filename = "test.pug";
pug_html = pug_html + "| yes! you can define variables in jade templates!";
;pug_debug_line = 62;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 62;pug_debug_filename = "test.pug";
pug_html = pug_html + "";
;pug_debug_line = 63;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 63;pug_debug_filename = "test.pug";
pug_html = pug_html + "| want more text in the heading ?";
;pug_debug_line = 64;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 64;pug_debug_filename = "test.pug";
pug_html = pug_html + "| arrays ? objects ?";
;pug_debug_line = 65;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 65;pug_debug_filename = "test.pug";
pug_html = pug_html + "";
;pug_debug_line = 66;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 66;pug_debug_filename = "test.pug";
pug_html = pug_html + "| One thing to remember though. Jade will html escape";
;pug_debug_line = 67;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 67;pug_debug_filename = "test.pug";
pug_html = pug_html + "| the contents of #{}. If you want unescaped content";
;pug_debug_line = 68;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 68;pug_debug_filename = "test.pug";
pug_html = pug_html + "| use #{}";
;pug_debug_line = 69;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 69;pug_debug_filename = "test.pug";
pug_html = pug_html + "| Also notice i escaped all interpolation tokens in this";
;pug_debug_line = 70;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 70;pug_debug_filename = "test.pug";
pug_html = pug_html + "| block comment, else Jade would think that it needs to";
;pug_debug_line = 71;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 71;pug_debug_filename = "test.pug";
pug_html = pug_html + "| do some string interpolation and throw errors!";
;pug_debug_line = 72;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 72;pug_debug_filename = "test.pug";
pug_html = pug_html + "";
;pug_debug_line = 73;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 73;pug_debug_filename = "test.pug";
pug_html = pug_html + "| That's all for now! In the next part I am going to";
;pug_debug_line = 74;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 74;pug_debug_filename = "test.pug";
pug_html = pug_html + "| show you some other features like conditionals, mixins";
;pug_debug_line = 75;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 75;pug_debug_filename = "test.pug";
pug_html = pug_html + "| and loops.";
;pug_debug_line = 76;pug_debug_filename = "test.pug";
pug_html = pug_html + "\n";
;pug_debug_line = 76;pug_debug_filename = "test.pug";
pug_html = pug_html + "--\u003E";
;pug_debug_line = 77;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Cmy_var\u003E";
;pug_debug_line = 77;pug_debug_filename = "test.pug";
pug_html = pug_html + "= {name: 'Jade', type: 'templating engine'}\u003C\u002Fmy_var\u003E";
;pug_debug_line = 78;pug_debug_filename = "test.pug";
pug_html = pug_html + "\u003Ch3\u003E";
;pug_debug_line = 78;pug_debug_filename = "test.pug";
pug_html = pug_html + (pug_escape(null == (pug_interp = my_var.name) ? "" : pug_interp));
;pug_debug_line = 78;pug_debug_filename = "test.pug";
pug_html = pug_html + " is a ";
;pug_debug_line = 78;pug_debug_filename = "test.pug";
pug_html = pug_html + (pug_escape(null == (pug_interp = my_var.type) ? "" : pug_interp)) + "\u003C\u002Fh3\u003E\u003C\u002Fbody\u003E\u003C\u002Fhtml\u003E";}.call(this,"my_var" in locals_for_with?locals_for_with.my_var:typeof my_var!=="undefined"?my_var:undefined));} catch (err) {pug_rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);};return pug_html;}